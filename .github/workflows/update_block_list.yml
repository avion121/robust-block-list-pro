```yaml
name: Update Robust Block List Pro

on:
  schedule:
    - cron: '0 5 * * *'  # Runs daily at 5:00 AM UTC for build job
    - cron: '0 0 * * 0'  # Runs weekly on Sunday for validate-sources job
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 5 * * *' || github.event_name == 'workflow_dispatch'  # Only run on daily schedule or manual dispatch
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests tenacity

      - name: Run List Generation
        run: |
          python generate_list.py 2>&1 | tee script.log
        continue-on-error: false

      - name: Commit and Push Changes
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add robust_block_list_pro.txt robust_block_list_pro_hosts.txt robust_block_list_pro_domains.txt filtered_secrets.log
          if ! git diff --cached --quiet; then
            git commit -m "Update Robust Block List Pro with multiple formats"
            git pull --rebase https://x-access-token:${PAT_TOKEN}@github.com/${{ github.repository }} main
            git push https://x-access-token:${PAT_TOKEN}@github.com/${{ github.repository }} HEAD:main
          else
            echo "No changes to commit"
          fi

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: script-logs
          path: script.log

  validate-sources:
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 0 * * 0'  # Only run on weekly schedule
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Validate URLs
        run: python validate_urls.py 2>&1 | tee validate.log

      - name: Upload Validation Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: validate-logs
          path: validate.log
```
