name: Update Robust Block List Pro

# Run nightly (UTC midnight) and allow manual trigger
on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

concurrency:
  group: robust-blocklist
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write   # allow commits / push
      issues: write     # allow creating an issue on fetch errors

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore cache (fetched sources / generator cache)
        uses: actions/cache@v4
        with:
          path: |
            cache
            .fetch_cache.json
          key: ${{ runner.os }}-robust-blocklist-cache-${{ hashFiles('**/sources.py') }}
          restore-keys: |
            ${{ runner.os }}-robust-blocklist-cache-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run generator
        run: |
          # ensure script is executable
          chmod +x generate_list.py || true
          python generate_list.py

      - name: Check for persistent fetch errors
        id: check_errors
        run: |
          if [ -s fetch_errors.log ]; then
            echo "errors=true" >> $GITHUB_OUTPUT
            echo "⚠️ Fetch errors detected, see fetch_errors.log"
            cat fetch_errors.log
          else
            echo "errors=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No fetch errors detected"
          fi

      - name: Upload artifacts (lists + logs)
        uses: actions/upload-artifact@v4
        with:
          name: robust-blocklist-outputs
          path: |
            robust_block_list_pro.txt
            robust_hosts.txt
            robust_ipset.txt
            fetch_errors.log

      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          # stage relevant outputs (no caches)
          git add robust_block_list_pro.txt robust_hosts.txt robust_ipset.txt fetch_errors.log || true
          if ! git diff --cached --quiet; then
            git commit -m "Update Robust Block List Pro (combined) - $(date -u +%Y-%m-%d)"
            # rebase remote changes, push using token
            git pull --rebase origin main || true
            git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} HEAD:main
          else
            echo "ℹ️ No changes to commit"
          fi

      - name: Create Issue if fetch errors present
        if: always()  # run regardless of job success so we can create an issue if necessary
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = 'fetch_errors.log';
            let errors = '';
            if (fs.existsSync(path)) {
              errors = fs.readFileSync(path, 'utf8').trim();
            }
            if (errors && errors.length > 0) {
              // create an issue only if similar recent issue doesn't exist (simple dedupe could be added)
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'Robust Block List Pro: Fetch Errors Detected',
                body: `Persistent fetch errors occurred during the update process. Please review the logs:\n\n\`\`\`\n${errors}\n\`\`\``
              });
            } else {
              console.log('No fetch errors to report.');
            }
